// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v6.32.0
// source: proto/queue.proto

package grpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EmptyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EmptyRequest) Reset() {
	*x = EmptyRequest{}
	mi := &file_proto_queue_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmptyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyRequest) ProtoMessage() {}

func (x *EmptyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_queue_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyRequest.ProtoReflect.Descriptor instead.
func (*EmptyRequest) Descriptor() ([]byte, []int) {
	return file_proto_queue_proto_rawDescGZIP(), []int{0}
}

type HealthResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"` // "ok" 등 단순 응답
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthResponse) Reset() {
	*x = HealthResponse{}
	mi := &file_proto_queue_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthResponse) ProtoMessage() {}

func (x *HealthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_queue_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthResponse.ProtoReflect.Descriptor instead.
func (*HealthResponse) Descriptor() ([]byte, []int) {
	return file_proto_queue_proto_rawDescGZIP(), []int{1}
}

func (x *HealthResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

// CreateQueueRequest
type CreateQueueRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	QueueName     string                 `protobuf:"bytes,1,opt,name=queue_name,json=queueName,proto3" json:"queue_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateQueueRequest) Reset() {
	*x = CreateQueueRequest{}
	mi := &file_proto_queue_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateQueueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateQueueRequest) ProtoMessage() {}

func (x *CreateQueueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_queue_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateQueueRequest.ProtoReflect.Descriptor instead.
func (*CreateQueueRequest) Descriptor() ([]byte, []int) {
	return file_proto_queue_proto_rawDescGZIP(), []int{2}
}

func (x *CreateQueueRequest) GetQueueName() string {
	if x != nil {
		return x.QueueName
	}
	return ""
}

// CreateQueueResponse
type CreateQueueResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"` // e.g., "success"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateQueueResponse) Reset() {
	*x = CreateQueueResponse{}
	mi := &file_proto_queue_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateQueueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateQueueResponse) ProtoMessage() {}

func (x *CreateQueueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_queue_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateQueueResponse.ProtoReflect.Descriptor instead.
func (*CreateQueueResponse) Descriptor() ([]byte, []int) {
	return file_proto_queue_proto_rawDescGZIP(), []int{3}
}

func (x *CreateQueueResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

// DeleteQueueRequest
type DeleteQueueRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	QueueName     string                 `protobuf:"bytes,1,opt,name=queue_name,json=queueName,proto3" json:"queue_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteQueueRequest) Reset() {
	*x = DeleteQueueRequest{}
	mi := &file_proto_queue_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteQueueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteQueueRequest) ProtoMessage() {}

func (x *DeleteQueueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_queue_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteQueueRequest.ProtoReflect.Descriptor instead.
func (*DeleteQueueRequest) Descriptor() ([]byte, []int) {
	return file_proto_queue_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteQueueRequest) GetQueueName() string {
	if x != nil {
		return x.QueueName
	}
	return ""
}

// DeleteQueueResponse
type DeleteQueueResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"` // e.g., "success"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteQueueResponse) Reset() {
	*x = DeleteQueueResponse{}
	mi := &file_proto_queue_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteQueueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteQueueResponse) ProtoMessage() {}

func (x *DeleteQueueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_queue_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteQueueResponse.ProtoReflect.Descriptor instead.
func (*DeleteQueueResponse) Descriptor() ([]byte, []int) {
	return file_proto_queue_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteQueueResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

// HTTP: EnqueueRequest{ message json.RawMessage }
type EnqueueRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	QueueName     string                 `protobuf:"bytes,1,opt,name=queue_name,json=queueName,proto3" json:"queue_name,omitempty"`
	Message       *EnqueueMessage        `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EnqueueRequest) Reset() {
	*x = EnqueueRequest{}
	mi := &file_proto_queue_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnqueueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnqueueRequest) ProtoMessage() {}

func (x *EnqueueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_queue_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnqueueRequest.ProtoReflect.Descriptor instead.
func (*EnqueueRequest) Descriptor() ([]byte, []int) {
	return file_proto_queue_proto_rawDescGZIP(), []int{6}
}

func (x *EnqueueRequest) GetQueueName() string {
	if x != nil {
		return x.QueueName
	}
	return ""
}

func (x *EnqueueRequest) GetMessage() *EnqueueMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

type EnqueueMessage struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Message         []byte                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Delay           string                 `protobuf:"bytes,2,opt,name=delay,proto3" json:"delay,omitempty"`                                            // optional, e.g., "5s","10m"
	DeduplicationId string                 `protobuf:"bytes,3,opt,name=deduplication_id,json=deduplicationId,proto3" json:"deduplication_id,omitempty"` // optional
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *EnqueueMessage) Reset() {
	*x = EnqueueMessage{}
	mi := &file_proto_queue_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnqueueMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnqueueMessage) ProtoMessage() {}

func (x *EnqueueMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_queue_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnqueueMessage.ProtoReflect.Descriptor instead.
func (*EnqueueMessage) Descriptor() ([]byte, []int) {
	return file_proto_queue_proto_rawDescGZIP(), []int{7}
}

func (x *EnqueueMessage) GetMessage() []byte {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *EnqueueMessage) GetDelay() string {
	if x != nil {
		return x.Delay
	}
	return ""
}

func (x *EnqueueMessage) GetDeduplicationId() string {
	if x != nil {
		return x.DeduplicationId
	}
	return ""
}

// HTTP: EnqueueResponse{ status, message }
type EnqueueResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"` // e.g., "enqueued"
	QueueName     string                 `protobuf:"bytes,2,opt,name=queue_name,json=queueName,proto3" json:"queue_name,omitempty"`
	Message       []byte                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"` // 원본 페이로드 에코백
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EnqueueResponse) Reset() {
	*x = EnqueueResponse{}
	mi := &file_proto_queue_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnqueueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnqueueResponse) ProtoMessage() {}

func (x *EnqueueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_queue_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnqueueResponse.ProtoReflect.Descriptor instead.
func (*EnqueueResponse) Descriptor() ([]byte, []int) {
	return file_proto_queue_proto_rawDescGZIP(), []int{8}
}

func (x *EnqueueResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *EnqueueResponse) GetQueueName() string {
	if x != nil {
		return x.QueueName
	}
	return ""
}

func (x *EnqueueResponse) GetMessage() []byte {
	if x != nil {
		return x.Message
	}
	return nil
}

// EnqueueBatch request
type EnqueueBatchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	QueueName     string                 `protobuf:"bytes,1,opt,name=queue_name,json=queueName,proto3" json:"queue_name,omitempty"`
	Mode          string                 `protobuf:"bytes,2,opt,name=mode,proto3" json:"mode,omitempty"`
	Messages      []*EnqueueMessage      `protobuf:"bytes,3,rep,name=messages,proto3" json:"messages,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EnqueueBatchRequest) Reset() {
	*x = EnqueueBatchRequest{}
	mi := &file_proto_queue_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnqueueBatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnqueueBatchRequest) ProtoMessage() {}

func (x *EnqueueBatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_queue_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnqueueBatchRequest.ProtoReflect.Descriptor instead.
func (*EnqueueBatchRequest) Descriptor() ([]byte, []int) {
	return file_proto_queue_proto_rawDescGZIP(), []int{9}
}

func (x *EnqueueBatchRequest) GetQueueName() string {
	if x != nil {
		return x.QueueName
	}
	return ""
}

func (x *EnqueueBatchRequest) GetMode() string {
	if x != nil {
		return x.Mode
	}
	return ""
}

func (x *EnqueueBatchRequest) GetMessages() []*EnqueueMessage {
	if x != nil {
		return x.Messages
	}
	return nil
}

// EnqueueBatch response
type EnqueueBatchResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Status         string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	QueueName      string                 `protobuf:"bytes,2,opt,name=queue_name,json=queueName,proto3" json:"queue_name,omitempty"`
	SuccessCount   int64                  `protobuf:"varint,3,opt,name=success_count,json=successCount,proto3" json:"success_count,omitempty"`
	FailureCount   int64                  `protobuf:"varint,4,opt,name=failure_count,json=failureCount,proto3" json:"failure_count,omitempty"`
	FailedMessages []*FailedMessage       `protobuf:"bytes,5,rep,name=failed_messages,json=failedMessages,proto3" json:"failed_messages,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *EnqueueBatchResponse) Reset() {
	*x = EnqueueBatchResponse{}
	mi := &file_proto_queue_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnqueueBatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnqueueBatchResponse) ProtoMessage() {}

func (x *EnqueueBatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_queue_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnqueueBatchResponse.ProtoReflect.Descriptor instead.
func (*EnqueueBatchResponse) Descriptor() ([]byte, []int) {
	return file_proto_queue_proto_rawDescGZIP(), []int{10}
}

func (x *EnqueueBatchResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *EnqueueBatchResponse) GetQueueName() string {
	if x != nil {
		return x.QueueName
	}
	return ""
}

func (x *EnqueueBatchResponse) GetSuccessCount() int64 {
	if x != nil {
		return x.SuccessCount
	}
	return 0
}

func (x *EnqueueBatchResponse) GetFailureCount() int64 {
	if x != nil {
		return x.FailureCount
	}
	return 0
}

func (x *EnqueueBatchResponse) GetFailedMessages() []*FailedMessage {
	if x != nil {
		return x.FailedMessages
	}
	return nil
}

// FailedMessage
type FailedMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Index         int64                  `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Message       []byte                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Error         string                 `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FailedMessage) Reset() {
	*x = FailedMessage{}
	mi := &file_proto_queue_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FailedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FailedMessage) ProtoMessage() {}

func (x *FailedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_queue_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FailedMessage.ProtoReflect.Descriptor instead.
func (*FailedMessage) Descriptor() ([]byte, []int) {
	return file_proto_queue_proto_rawDescGZIP(), []int{11}
}

func (x *FailedMessage) GetIndex() int64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *FailedMessage) GetMessage() []byte {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *FailedMessage) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// HTTP: DequeueRequest{ group, consumer_id }
type DequeueRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	QueueName     string                 `protobuf:"bytes,1,opt,name=queue_name,json=queueName,proto3" json:"queue_name,omitempty"`
	Group         string                 `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
	ConsumerId    string                 `protobuf:"bytes,3,opt,name=consumer_id,json=consumerId,proto3" json:"consumer_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DequeueRequest) Reset() {
	*x = DequeueRequest{}
	mi := &file_proto_queue_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DequeueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DequeueRequest) ProtoMessage() {}

func (x *DequeueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_queue_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DequeueRequest.ProtoReflect.Descriptor instead.
func (*DequeueRequest) Descriptor() ([]byte, []int) {
	return file_proto_queue_proto_rawDescGZIP(), []int{12}
}

func (x *DequeueRequest) GetQueueName() string {
	if x != nil {
		return x.QueueName
	}
	return ""
}

func (x *DequeueRequest) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *DequeueRequest) GetConsumerId() string {
	if x != nil {
		return x.ConsumerId
	}
	return ""
}

// HTTP: DequeueMessage{ payload, receipt, id }
type DequeueMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Payload       []byte                 `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	Receipt       string                 `protobuf:"bytes,2,opt,name=receipt,proto3" json:"receipt,omitempty"`
	Id            int64                  `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DequeueMessage) Reset() {
	*x = DequeueMessage{}
	mi := &file_proto_queue_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DequeueMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DequeueMessage) ProtoMessage() {}

func (x *DequeueMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_queue_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DequeueMessage.ProtoReflect.Descriptor instead.
func (*DequeueMessage) Descriptor() ([]byte, []int) {
	return file_proto_queue_proto_rawDescGZIP(), []int{13}
}

func (x *DequeueMessage) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *DequeueMessage) GetReceipt() string {
	if x != nil {
		return x.Receipt
	}
	return ""
}

func (x *DequeueMessage) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// HTTP: DequeueResponse{ status, message }
type DequeueResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"` // e.g., "dequeued"
	Message       *DequeueMessage        `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DequeueResponse) Reset() {
	*x = DequeueResponse{}
	mi := &file_proto_queue_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DequeueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DequeueResponse) ProtoMessage() {}

func (x *DequeueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_queue_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DequeueResponse.ProtoReflect.Descriptor instead.
func (*DequeueResponse) Descriptor() ([]byte, []int) {
	return file_proto_queue_proto_rawDescGZIP(), []int{14}
}

func (x *DequeueResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *DequeueResponse) GetMessage() *DequeueMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

// HTTP: AckRequest{ group, message_id, receipt }
type AckRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	QueueName     string                 `protobuf:"bytes,1,opt,name=queue_name,json=queueName,proto3" json:"queue_name,omitempty"`
	Group         string                 `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
	MessageId     int64                  `protobuf:"varint,3,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	Receipt       string                 `protobuf:"bytes,4,opt,name=receipt,proto3" json:"receipt,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AckRequest) Reset() {
	*x = AckRequest{}
	mi := &file_proto_queue_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AckRequest) ProtoMessage() {}

func (x *AckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_queue_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AckRequest.ProtoReflect.Descriptor instead.
func (*AckRequest) Descriptor() ([]byte, []int) {
	return file_proto_queue_proto_rawDescGZIP(), []int{15}
}

func (x *AckRequest) GetQueueName() string {
	if x != nil {
		return x.QueueName
	}
	return ""
}

func (x *AckRequest) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *AckRequest) GetMessageId() int64 {
	if x != nil {
		return x.MessageId
	}
	return 0
}

func (x *AckRequest) GetReceipt() string {
	if x != nil {
		return x.Receipt
	}
	return ""
}

type AckResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"` // "ack ok"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AckResponse) Reset() {
	*x = AckResponse{}
	mi := &file_proto_queue_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AckResponse) ProtoMessage() {}

func (x *AckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_queue_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AckResponse.ProtoReflect.Descriptor instead.
func (*AckResponse) Descriptor() ([]byte, []int) {
	return file_proto_queue_proto_rawDescGZIP(), []int{16}
}

func (x *AckResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

// HTTP: NackRequest{ group, message_id, receipt }
type NackRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	QueueName     string                 `protobuf:"bytes,1,opt,name=queue_name,json=queueName,proto3" json:"queue_name,omitempty"`
	Group         string                 `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
	MessageId     int64                  `protobuf:"varint,3,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	Receipt       string                 `protobuf:"bytes,4,opt,name=receipt,proto3" json:"receipt,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NackRequest) Reset() {
	*x = NackRequest{}
	mi := &file_proto_queue_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NackRequest) ProtoMessage() {}

func (x *NackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_queue_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NackRequest.ProtoReflect.Descriptor instead.
func (*NackRequest) Descriptor() ([]byte, []int) {
	return file_proto_queue_proto_rawDescGZIP(), []int{17}
}

func (x *NackRequest) GetQueueName() string {
	if x != nil {
		return x.QueueName
	}
	return ""
}

func (x *NackRequest) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *NackRequest) GetMessageId() int64 {
	if x != nil {
		return x.MessageId
	}
	return 0
}

func (x *NackRequest) GetReceipt() string {
	if x != nil {
		return x.Receipt
	}
	return ""
}

type NackResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"` // "nack ok"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NackResponse) Reset() {
	*x = NackResponse{}
	mi := &file_proto_queue_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NackResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NackResponse) ProtoMessage() {}

func (x *NackResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_queue_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NackResponse.ProtoReflect.Descriptor instead.
func (*NackResponse) Descriptor() ([]byte, []int) {
	return file_proto_queue_proto_rawDescGZIP(), []int{18}
}

func (x *NackResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

// HTTP: PeekRequest{ group }
type PeekRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	QueueName     string                 `protobuf:"bytes,1,opt,name=queue_name,json=queueName,proto3" json:"queue_name,omitempty"`
	Group         string                 `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
	Options       *PeekOptions           `protobuf:"bytes,3,opt,name=options,proto3" json:"options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PeekRequest) Reset() {
	*x = PeekRequest{}
	mi := &file_proto_queue_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PeekRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeekRequest) ProtoMessage() {}

func (x *PeekRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_queue_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeekRequest.ProtoReflect.Descriptor instead.
func (*PeekRequest) Descriptor() ([]byte, []int) {
	return file_proto_queue_proto_rawDescGZIP(), []int{19}
}

func (x *PeekRequest) GetQueueName() string {
	if x != nil {
		return x.QueueName
	}
	return ""
}

func (x *PeekRequest) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *PeekRequest) GetOptions() *PeekOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

// peek options
type PeekOptions struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Limit         int64                  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`     // number of messages to peek
	Cursor        int64                  `protobuf:"varint,2,opt,name=cursor,proto3" json:"cursor,omitempty"`   // for pagination
	Order         string                 `protobuf:"bytes,3,opt,name=order,proto3" json:"order,omitempty"`      // "asc" or "desc"
	Preview       bool                   `protobuf:"varint,4,opt,name=preview,proto3" json:"preview,omitempty"` // whether to return full message or just metadata
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PeekOptions) Reset() {
	*x = PeekOptions{}
	mi := &file_proto_queue_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PeekOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeekOptions) ProtoMessage() {}

func (x *PeekOptions) ProtoReflect() protoreflect.Message {
	mi := &file_proto_queue_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeekOptions.ProtoReflect.Descriptor instead.
func (*PeekOptions) Descriptor() ([]byte, []int) {
	return file_proto_queue_proto_rawDescGZIP(), []int{20}
}

func (x *PeekOptions) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *PeekOptions) GetCursor() int64 {
	if x != nil {
		return x.Cursor
	}
	return 0
}

func (x *PeekOptions) GetOrder() string {
	if x != nil {
		return x.Order
	}
	return ""
}

func (x *PeekOptions) GetPreview() bool {
	if x != nil {
		return x.Preview
	}
	return false
}

// HTTP: PeekResponse{ status, message }
type PeekResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"` // "ok"
	Message       []*DequeueMessage      `protobuf:"bytes,2,rep,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PeekResponse) Reset() {
	*x = PeekResponse{}
	mi := &file_proto_queue_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PeekResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeekResponse) ProtoMessage() {}

func (x *PeekResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_queue_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeekResponse.ProtoReflect.Descriptor instead.
func (*PeekResponse) Descriptor() ([]byte, []int) {
	return file_proto_queue_proto_rawDescGZIP(), []int{21}
}

func (x *PeekResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *PeekResponse) GetMessage() []*DequeueMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

// HTTP: RenewRequest{ group, message_id, receipt, extend_sec }
type RenewRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	QueueName     string                 `protobuf:"bytes,1,opt,name=queue_name,json=queueName,proto3" json:"queue_name,omitempty"`
	Group         string                 `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
	MessageId     int64                  `protobuf:"varint,3,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	Receipt       string                 `protobuf:"bytes,4,opt,name=receipt,proto3" json:"receipt,omitempty"`
	ExtendSec     int32                  `protobuf:"varint,5,opt,name=extend_sec,json=extendSec,proto3" json:"extend_sec,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RenewRequest) Reset() {
	*x = RenewRequest{}
	mi := &file_proto_queue_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RenewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenewRequest) ProtoMessage() {}

func (x *RenewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_queue_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenewRequest.ProtoReflect.Descriptor instead.
func (*RenewRequest) Descriptor() ([]byte, []int) {
	return file_proto_queue_proto_rawDescGZIP(), []int{22}
}

func (x *RenewRequest) GetQueueName() string {
	if x != nil {
		return x.QueueName
	}
	return ""
}

func (x *RenewRequest) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *RenewRequest) GetMessageId() int64 {
	if x != nil {
		return x.MessageId
	}
	return 0
}

func (x *RenewRequest) GetReceipt() string {
	if x != nil {
		return x.Receipt
	}
	return ""
}

func (x *RenewRequest) GetExtendSec() int32 {
	if x != nil {
		return x.ExtendSec
	}
	return 0
}

type RenewResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"` // "renewed"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RenewResponse) Reset() {
	*x = RenewResponse{}
	mi := &file_proto_queue_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RenewResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenewResponse) ProtoMessage() {}

func (x *RenewResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_queue_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenewResponse.ProtoReflect.Descriptor instead.
func (*RenewResponse) Descriptor() ([]byte, []int) {
	return file_proto_queue_proto_rawDescGZIP(), []int{23}
}

func (x *RenewResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type StatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	QueueName     string                 `protobuf:"bytes,1,opt,name=queue_name,json=queueName,proto3" json:"queue_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatusRequest) Reset() {
	*x = StatusRequest{}
	mi := &file_proto_queue_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusRequest) ProtoMessage() {}

func (x *StatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_queue_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusRequest.ProtoReflect.Descriptor instead.
func (*StatusRequest) Descriptor() ([]byte, []int) {
	return file_proto_queue_proto_rawDescGZIP(), []int{24}
}

func (x *StatusRequest) GetQueueName() string {
	if x != nil {
		return x.QueueName
	}
	return ""
}

// HTTP: StatusResponse{ status, queue_status }
type StatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"` // "ok"
	QueueStatus   *QueueStatus           `protobuf:"bytes,2,opt,name=queue_status,json=queueStatus,proto3" json:"queue_status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatusResponse) Reset() {
	*x = StatusResponse{}
	mi := &file_proto_queue_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusResponse) ProtoMessage() {}

func (x *StatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_queue_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusResponse.ProtoReflect.Descriptor instead.
func (*StatusResponse) Descriptor() ([]byte, []int) {
	return file_proto_queue_proto_rawDescGZIP(), []int{25}
}

func (x *StatusResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *StatusResponse) GetQueueStatus() *QueueStatus {
	if x != nil {
		return x.QueueStatus
	}
	return nil
}

// HTTP: QueueStatus{ queue_name, total_messages, acked_messages, inflight_messages, dlq_messages }
type QueueStatus struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	QueueName        string                 `protobuf:"bytes,1,opt,name=queue_name,json=queueName,proto3" json:"queue_name,omitempty"`
	TotalMessages    int64                  `protobuf:"varint,2,opt,name=total_messages,json=totalMessages,proto3" json:"total_messages,omitempty"`
	AckedMessages    int64                  `protobuf:"varint,3,opt,name=acked_messages,json=ackedMessages,proto3" json:"acked_messages,omitempty"`
	InflightMessages int64                  `protobuf:"varint,4,opt,name=inflight_messages,json=inflightMessages,proto3" json:"inflight_messages,omitempty"`
	DlqMessages      int64                  `protobuf:"varint,5,opt,name=dlq_messages,json=dlqMessages,proto3" json:"dlq_messages,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *QueueStatus) Reset() {
	*x = QueueStatus{}
	mi := &file_proto_queue_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueueStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueueStatus) ProtoMessage() {}

func (x *QueueStatus) ProtoReflect() protoreflect.Message {
	mi := &file_proto_queue_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueueStatus.ProtoReflect.Descriptor instead.
func (*QueueStatus) Descriptor() ([]byte, []int) {
	return file_proto_queue_proto_rawDescGZIP(), []int{26}
}

func (x *QueueStatus) GetQueueName() string {
	if x != nil {
		return x.QueueName
	}
	return ""
}

func (x *QueueStatus) GetTotalMessages() int64 {
	if x != nil {
		return x.TotalMessages
	}
	return 0
}

func (x *QueueStatus) GetAckedMessages() int64 {
	if x != nil {
		return x.AckedMessages
	}
	return 0
}

func (x *QueueStatus) GetInflightMessages() int64 {
	if x != nil {
		return x.InflightMessages
	}
	return 0
}

func (x *QueueStatus) GetDlqMessages() int64 {
	if x != nil {
		return x.DlqMessages
	}
	return 0
}

type StatusAllResponse struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Status        string                  `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"` // "ok"
	QueueStatuses map[string]*QueueStatus `protobuf:"bytes,2,rep,name=queue_statuses,json=queueStatuses,proto3" json:"queue_statuses,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatusAllResponse) Reset() {
	*x = StatusAllResponse{}
	mi := &file_proto_queue_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusAllResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusAllResponse) ProtoMessage() {}

func (x *StatusAllResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_queue_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusAllResponse.ProtoReflect.Descriptor instead.
func (*StatusAllResponse) Descriptor() ([]byte, []int) {
	return file_proto_queue_proto_rawDescGZIP(), []int{27}
}

func (x *StatusAllResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *StatusAllResponse) GetQueueStatuses() map[string]*QueueStatus {
	if x != nil {
		return x.QueueStatuses
	}
	return nil
}

var File_proto_queue_proto protoreflect.FileDescriptor

const file_proto_queue_proto_rawDesc = "" +
	"\n" +
	"\x11proto/queue.proto\x12\bqueue.v1\"\x0e\n" +
	"\fEmptyRequest\"(\n" +
	"\x0eHealthResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\"3\n" +
	"\x12CreateQueueRequest\x12\x1d\n" +
	"\n" +
	"queue_name\x18\x01 \x01(\tR\tqueueName\"-\n" +
	"\x13CreateQueueResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\"3\n" +
	"\x12DeleteQueueRequest\x12\x1d\n" +
	"\n" +
	"queue_name\x18\x01 \x01(\tR\tqueueName\"-\n" +
	"\x13DeleteQueueResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\"c\n" +
	"\x0eEnqueueRequest\x12\x1d\n" +
	"\n" +
	"queue_name\x18\x01 \x01(\tR\tqueueName\x122\n" +
	"\amessage\x18\x02 \x01(\v2\x18.queue.v1.EnqueueMessageR\amessage\"k\n" +
	"\x0eEnqueueMessage\x12\x18\n" +
	"\amessage\x18\x01 \x01(\fR\amessage\x12\x14\n" +
	"\x05delay\x18\x02 \x01(\tR\x05delay\x12)\n" +
	"\x10deduplication_id\x18\x03 \x01(\tR\x0fdeduplicationId\"b\n" +
	"\x0fEnqueueResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12\x1d\n" +
	"\n" +
	"queue_name\x18\x02 \x01(\tR\tqueueName\x12\x18\n" +
	"\amessage\x18\x03 \x01(\fR\amessage\"~\n" +
	"\x13EnqueueBatchRequest\x12\x1d\n" +
	"\n" +
	"queue_name\x18\x01 \x01(\tR\tqueueName\x12\x12\n" +
	"\x04mode\x18\x02 \x01(\tR\x04mode\x124\n" +
	"\bmessages\x18\x03 \x03(\v2\x18.queue.v1.EnqueueMessageR\bmessages\"\xd9\x01\n" +
	"\x14EnqueueBatchResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12\x1d\n" +
	"\n" +
	"queue_name\x18\x02 \x01(\tR\tqueueName\x12#\n" +
	"\rsuccess_count\x18\x03 \x01(\x03R\fsuccessCount\x12#\n" +
	"\rfailure_count\x18\x04 \x01(\x03R\ffailureCount\x12@\n" +
	"\x0ffailed_messages\x18\x05 \x03(\v2\x17.queue.v1.FailedMessageR\x0efailedMessages\"U\n" +
	"\rFailedMessage\x12\x14\n" +
	"\x05index\x18\x01 \x01(\x03R\x05index\x12\x18\n" +
	"\amessage\x18\x02 \x01(\fR\amessage\x12\x14\n" +
	"\x05error\x18\x03 \x01(\tR\x05error\"f\n" +
	"\x0eDequeueRequest\x12\x1d\n" +
	"\n" +
	"queue_name\x18\x01 \x01(\tR\tqueueName\x12\x14\n" +
	"\x05group\x18\x02 \x01(\tR\x05group\x12\x1f\n" +
	"\vconsumer_id\x18\x03 \x01(\tR\n" +
	"consumerId\"T\n" +
	"\x0eDequeueMessage\x12\x18\n" +
	"\apayload\x18\x01 \x01(\fR\apayload\x12\x18\n" +
	"\areceipt\x18\x02 \x01(\tR\areceipt\x12\x0e\n" +
	"\x02id\x18\x03 \x01(\x03R\x02id\"]\n" +
	"\x0fDequeueResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x122\n" +
	"\amessage\x18\x02 \x01(\v2\x18.queue.v1.DequeueMessageR\amessage\"z\n" +
	"\n" +
	"AckRequest\x12\x1d\n" +
	"\n" +
	"queue_name\x18\x01 \x01(\tR\tqueueName\x12\x14\n" +
	"\x05group\x18\x02 \x01(\tR\x05group\x12\x1d\n" +
	"\n" +
	"message_id\x18\x03 \x01(\x03R\tmessageId\x12\x18\n" +
	"\areceipt\x18\x04 \x01(\tR\areceipt\"%\n" +
	"\vAckResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\"{\n" +
	"\vNackRequest\x12\x1d\n" +
	"\n" +
	"queue_name\x18\x01 \x01(\tR\tqueueName\x12\x14\n" +
	"\x05group\x18\x02 \x01(\tR\x05group\x12\x1d\n" +
	"\n" +
	"message_id\x18\x03 \x01(\x03R\tmessageId\x12\x18\n" +
	"\areceipt\x18\x04 \x01(\tR\areceipt\"&\n" +
	"\fNackResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\"s\n" +
	"\vPeekRequest\x12\x1d\n" +
	"\n" +
	"queue_name\x18\x01 \x01(\tR\tqueueName\x12\x14\n" +
	"\x05group\x18\x02 \x01(\tR\x05group\x12/\n" +
	"\aoptions\x18\x03 \x01(\v2\x15.queue.v1.PeekOptionsR\aoptions\"k\n" +
	"\vPeekOptions\x12\x14\n" +
	"\x05limit\x18\x01 \x01(\x03R\x05limit\x12\x16\n" +
	"\x06cursor\x18\x02 \x01(\x03R\x06cursor\x12\x14\n" +
	"\x05order\x18\x03 \x01(\tR\x05order\x12\x18\n" +
	"\apreview\x18\x04 \x01(\bR\apreview\"Z\n" +
	"\fPeekResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x122\n" +
	"\amessage\x18\x02 \x03(\v2\x18.queue.v1.DequeueMessageR\amessage\"\x9b\x01\n" +
	"\fRenewRequest\x12\x1d\n" +
	"\n" +
	"queue_name\x18\x01 \x01(\tR\tqueueName\x12\x14\n" +
	"\x05group\x18\x02 \x01(\tR\x05group\x12\x1d\n" +
	"\n" +
	"message_id\x18\x03 \x01(\x03R\tmessageId\x12\x18\n" +
	"\areceipt\x18\x04 \x01(\tR\areceipt\x12\x1d\n" +
	"\n" +
	"extend_sec\x18\x05 \x01(\x05R\textendSec\"'\n" +
	"\rRenewResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\".\n" +
	"\rStatusRequest\x12\x1d\n" +
	"\n" +
	"queue_name\x18\x01 \x01(\tR\tqueueName\"b\n" +
	"\x0eStatusResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x128\n" +
	"\fqueue_status\x18\x02 \x01(\v2\x15.queue.v1.QueueStatusR\vqueueStatus\"\xca\x01\n" +
	"\vQueueStatus\x12\x1d\n" +
	"\n" +
	"queue_name\x18\x01 \x01(\tR\tqueueName\x12%\n" +
	"\x0etotal_messages\x18\x02 \x01(\x03R\rtotalMessages\x12%\n" +
	"\x0eacked_messages\x18\x03 \x01(\x03R\rackedMessages\x12+\n" +
	"\x11inflight_messages\x18\x04 \x01(\x03R\x10inflightMessages\x12!\n" +
	"\fdlq_messages\x18\x05 \x01(\x03R\vdlqMessages\"\xdb\x01\n" +
	"\x11StatusAllResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12U\n" +
	"\x0equeue_statuses\x18\x02 \x03(\v2..queue.v1.StatusAllResponse.QueueStatusesEntryR\rqueueStatuses\x1aW\n" +
	"\x12QueueStatusesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12+\n" +
	"\x05value\x18\x02 \x01(\v2\x15.queue.v1.QueueStatusR\x05value:\x028\x012\x91\x06\n" +
	"\fQueueService\x12?\n" +
	"\vHealthCheck\x12\x16.queue.v1.EmptyRequest\x1a\x18.queue.v1.HealthResponse\x12J\n" +
	"\vCreateQueue\x12\x1c.queue.v1.CreateQueueRequest\x1a\x1d.queue.v1.CreateQueueResponse\x12J\n" +
	"\vDeleteQueue\x12\x1c.queue.v1.DeleteQueueRequest\x1a\x1d.queue.v1.DeleteQueueResponse\x12>\n" +
	"\aEnqueue\x12\x18.queue.v1.EnqueueRequest\x1a\x19.queue.v1.EnqueueResponse\x12M\n" +
	"\fEnqueueBatch\x12\x1d.queue.v1.EnqueueBatchRequest\x1a\x1e.queue.v1.EnqueueBatchResponse\x12>\n" +
	"\aDequeue\x12\x18.queue.v1.DequeueRequest\x1a\x19.queue.v1.DequeueResponse\x122\n" +
	"\x03Ack\x12\x14.queue.v1.AckRequest\x1a\x15.queue.v1.AckResponse\x125\n" +
	"\x04Nack\x12\x15.queue.v1.NackRequest\x1a\x16.queue.v1.NackResponse\x125\n" +
	"\x04Peek\x12\x15.queue.v1.PeekRequest\x1a\x16.queue.v1.PeekResponse\x128\n" +
	"\x05Renew\x12\x16.queue.v1.RenewRequest\x1a\x17.queue.v1.RenewResponse\x12;\n" +
	"\x06Status\x12\x17.queue.v1.StatusRequest\x1a\x18.queue.v1.StatusResponse\x12@\n" +
	"\tStatusAll\x12\x16.queue.v1.EmptyRequest\x1a\x1b.queue.v1.StatusAllResponseB\x13Z\x11internal/api/grpcb\x06proto3"

var (
	file_proto_queue_proto_rawDescOnce sync.Once
	file_proto_queue_proto_rawDescData []byte
)

func file_proto_queue_proto_rawDescGZIP() []byte {
	file_proto_queue_proto_rawDescOnce.Do(func() {
		file_proto_queue_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_queue_proto_rawDesc), len(file_proto_queue_proto_rawDesc)))
	})
	return file_proto_queue_proto_rawDescData
}

var file_proto_queue_proto_msgTypes = make([]protoimpl.MessageInfo, 29)
var file_proto_queue_proto_goTypes = []any{
	(*EmptyRequest)(nil),         // 0: queue.v1.EmptyRequest
	(*HealthResponse)(nil),       // 1: queue.v1.HealthResponse
	(*CreateQueueRequest)(nil),   // 2: queue.v1.CreateQueueRequest
	(*CreateQueueResponse)(nil),  // 3: queue.v1.CreateQueueResponse
	(*DeleteQueueRequest)(nil),   // 4: queue.v1.DeleteQueueRequest
	(*DeleteQueueResponse)(nil),  // 5: queue.v1.DeleteQueueResponse
	(*EnqueueRequest)(nil),       // 6: queue.v1.EnqueueRequest
	(*EnqueueMessage)(nil),       // 7: queue.v1.EnqueueMessage
	(*EnqueueResponse)(nil),      // 8: queue.v1.EnqueueResponse
	(*EnqueueBatchRequest)(nil),  // 9: queue.v1.EnqueueBatchRequest
	(*EnqueueBatchResponse)(nil), // 10: queue.v1.EnqueueBatchResponse
	(*FailedMessage)(nil),        // 11: queue.v1.FailedMessage
	(*DequeueRequest)(nil),       // 12: queue.v1.DequeueRequest
	(*DequeueMessage)(nil),       // 13: queue.v1.DequeueMessage
	(*DequeueResponse)(nil),      // 14: queue.v1.DequeueResponse
	(*AckRequest)(nil),           // 15: queue.v1.AckRequest
	(*AckResponse)(nil),          // 16: queue.v1.AckResponse
	(*NackRequest)(nil),          // 17: queue.v1.NackRequest
	(*NackResponse)(nil),         // 18: queue.v1.NackResponse
	(*PeekRequest)(nil),          // 19: queue.v1.PeekRequest
	(*PeekOptions)(nil),          // 20: queue.v1.PeekOptions
	(*PeekResponse)(nil),         // 21: queue.v1.PeekResponse
	(*RenewRequest)(nil),         // 22: queue.v1.RenewRequest
	(*RenewResponse)(nil),        // 23: queue.v1.RenewResponse
	(*StatusRequest)(nil),        // 24: queue.v1.StatusRequest
	(*StatusResponse)(nil),       // 25: queue.v1.StatusResponse
	(*QueueStatus)(nil),          // 26: queue.v1.QueueStatus
	(*StatusAllResponse)(nil),    // 27: queue.v1.StatusAllResponse
	nil,                          // 28: queue.v1.StatusAllResponse.QueueStatusesEntry
}
var file_proto_queue_proto_depIdxs = []int32{
	7,  // 0: queue.v1.EnqueueRequest.message:type_name -> queue.v1.EnqueueMessage
	7,  // 1: queue.v1.EnqueueBatchRequest.messages:type_name -> queue.v1.EnqueueMessage
	11, // 2: queue.v1.EnqueueBatchResponse.failed_messages:type_name -> queue.v1.FailedMessage
	13, // 3: queue.v1.DequeueResponse.message:type_name -> queue.v1.DequeueMessage
	20, // 4: queue.v1.PeekRequest.options:type_name -> queue.v1.PeekOptions
	13, // 5: queue.v1.PeekResponse.message:type_name -> queue.v1.DequeueMessage
	26, // 6: queue.v1.StatusResponse.queue_status:type_name -> queue.v1.QueueStatus
	28, // 7: queue.v1.StatusAllResponse.queue_statuses:type_name -> queue.v1.StatusAllResponse.QueueStatusesEntry
	26, // 8: queue.v1.StatusAllResponse.QueueStatusesEntry.value:type_name -> queue.v1.QueueStatus
	0,  // 9: queue.v1.QueueService.HealthCheck:input_type -> queue.v1.EmptyRequest
	2,  // 10: queue.v1.QueueService.CreateQueue:input_type -> queue.v1.CreateQueueRequest
	4,  // 11: queue.v1.QueueService.DeleteQueue:input_type -> queue.v1.DeleteQueueRequest
	6,  // 12: queue.v1.QueueService.Enqueue:input_type -> queue.v1.EnqueueRequest
	9,  // 13: queue.v1.QueueService.EnqueueBatch:input_type -> queue.v1.EnqueueBatchRequest
	12, // 14: queue.v1.QueueService.Dequeue:input_type -> queue.v1.DequeueRequest
	15, // 15: queue.v1.QueueService.Ack:input_type -> queue.v1.AckRequest
	17, // 16: queue.v1.QueueService.Nack:input_type -> queue.v1.NackRequest
	19, // 17: queue.v1.QueueService.Peek:input_type -> queue.v1.PeekRequest
	22, // 18: queue.v1.QueueService.Renew:input_type -> queue.v1.RenewRequest
	24, // 19: queue.v1.QueueService.Status:input_type -> queue.v1.StatusRequest
	0,  // 20: queue.v1.QueueService.StatusAll:input_type -> queue.v1.EmptyRequest
	1,  // 21: queue.v1.QueueService.HealthCheck:output_type -> queue.v1.HealthResponse
	3,  // 22: queue.v1.QueueService.CreateQueue:output_type -> queue.v1.CreateQueueResponse
	5,  // 23: queue.v1.QueueService.DeleteQueue:output_type -> queue.v1.DeleteQueueResponse
	8,  // 24: queue.v1.QueueService.Enqueue:output_type -> queue.v1.EnqueueResponse
	10, // 25: queue.v1.QueueService.EnqueueBatch:output_type -> queue.v1.EnqueueBatchResponse
	14, // 26: queue.v1.QueueService.Dequeue:output_type -> queue.v1.DequeueResponse
	16, // 27: queue.v1.QueueService.Ack:output_type -> queue.v1.AckResponse
	18, // 28: queue.v1.QueueService.Nack:output_type -> queue.v1.NackResponse
	21, // 29: queue.v1.QueueService.Peek:output_type -> queue.v1.PeekResponse
	23, // 30: queue.v1.QueueService.Renew:output_type -> queue.v1.RenewResponse
	25, // 31: queue.v1.QueueService.Status:output_type -> queue.v1.StatusResponse
	27, // 32: queue.v1.QueueService.StatusAll:output_type -> queue.v1.StatusAllResponse
	21, // [21:33] is the sub-list for method output_type
	9,  // [9:21] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_proto_queue_proto_init() }
func file_proto_queue_proto_init() {
	if File_proto_queue_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_queue_proto_rawDesc), len(file_proto_queue_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   29,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_queue_proto_goTypes,
		DependencyIndexes: file_proto_queue_proto_depIdxs,
		MessageInfos:      file_proto_queue_proto_msgTypes,
	}.Build()
	File_proto_queue_proto = out.File
	file_proto_queue_proto_goTypes = nil
	file_proto_queue_proto_depIdxs = nil
}
